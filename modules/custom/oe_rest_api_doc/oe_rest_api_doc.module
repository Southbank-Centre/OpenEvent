<?php

/**
 * Implements hook_menu_alter()
 */
function oe_rest_api_doc_menu_alter(&$items) {
  $items['api/doc']['title'] = 'API Documentation';
  $items['api/doc']['page callback'] = 'OE_rest_api_doc_page';
  $items['api/doc']['access arguments'] = array('access oe_rest_api_doc');
  $items['api/doc']['menu_name'] = 'navigation';
}

/**
 * Implements hook_permission().
 */
function oe_rest_api_doc_permission() {
  return array(
    'access oe_rest_api_doc' => array(
      'title' => t('Access Open Event REST API documentation'),
      'description' => t('Allow to the user to access the REST API documentation.'),
    ),
  );
}

/**
 * API documentation page.
 */
function oe_rest_api_doc_page($format = '') {
  $resources = oe_schemaorg_rest_restws_resource_info();
  ksort($resources);
  $formats = restws_get_format_info();

  if (!isset($formats[$format])) {
    drupal_goto('api/doc/' . key($formats));
  }

  // Display format links if one hasn't been specified in the URL

  foreach ($formats as $name => $format_info) {
    if ($format === $name) {
      $links[] = '<strong>' . $format_info['label'] . '</strong>';
    }
    else {
      $links[] = l($format_info['label'], 'api/doc/' . $name);
    }
  }
  $page['header']['#markup'] = '<p>Data types: ' . implode(' | ', $links) . '</p><br/>';


  // Build documentation markup
  $page['body']['#markup'] =  '';
  $page['body']['#markup'] .= '<nav><h3>Contents</h3><ul>';
  foreach ($resources as $type => $resource) {
    // Only display resource title if user has access
    if (user_access('access resource ' . $type)) {
      // Add an html ID to each resource
      $resources[$type]['html_id'] = drupal_html_id($resource['label']);
      // Add resources to the menu
      $page['body']['#markup'] .= '<li><a href="#' . $resources[$type]['html_id'] . '">' . $resource['label'] . '</a></li>';
    }
  }
  $page['body']['#markup'] .= '</ul></nav><br/>';

  foreach ($resources as $type => $resource) {

    // Only display resource if user has access
    if (user_access('access resource ' . $type)) {
      // Bundle heading
      $page['body']['#markup'] .= '<br/><h2 id="' . $resource['html_id'] . '" class="api-doc-resource">' . $resource['label'] . '</h2>';

      $page['body']['#markup'] .= '<dl>';

      // Single item API call
      $page['body']['#markup'] .= '<dt>';
      $page['body']['#markup'] .= '<h3><code>/' . $resource['menu_path'] . '/&lt;ID&gt;.' . $format . '</code></h3>';
      $page['body']['#markup'] .= '</dt>';
      $page['body']['#markup'] .= '<dd>';
      $page['body']['#markup'] .= '<p>Returns a single ' . $type . ' item based on the &lt;ID&gt; passed in.</p>';
      // Example
      $page['body']['#markup'] .= '<h4>Example call</h4>';
      $page['body']['#markup'] .= '<p>This call will return the ' . $type . ' item whose ID is 12.</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '/12.' . $format . '</code></p>';
      $page['body']['#markup'] .= '</dd>';

      // List API call
      $page['body']['#markup'] .= '<dt>';
      $page['body']['#markup'] .= '<h3><code>/' . $resource['menu_path'] . '.' . $format . '</code></h3>';
      $page['body']['#markup'] .= '</dt>';
      $page['body']['#markup'] .= '<dd>';
      $page['body']['#markup'] .= '<p>Returns a list of ' . $type . ' items.</p>';
      // Filtering
      $page['body']['#markup'] .= '<h4>Filtering</h4>';
      $page['body']['#markup'] .= '<p>You can filter on any of properties listed below, in the following way:</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '.' . $format . '?&lt;propertyName&gt;=&lt;propertyValue&gt;</code></p>';
      $property_rows = array();
      $controller = restws_resource_controller($type);
      foreach ($controller->propertyInfo() as $property => $property_info) {
        if (substr($property, 0, 7) == 'schema:') {
          $property = substr($property, 7);
        }
        $property_rows[] = array(
          $property,
          $property_info['description'],
        );
      }
      $properties_table = theme('table', array('rows' => $property_rows, 'header' => array('Property', 'Description')));
      $page['body']['#markup'] .= $properties_table;
      // Sorting
      $page['body']['#markup'] .= '<h4>Sorting</h4>';
      $page['body']['#markup'] .= '<p>You can sort by passing the <code>sort</code> parameter:</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '.' . $format . '?sort=&lt;propertyName&gt;</code></p>';
      $page['body']['#markup'] .= '<p>You can also specify the sort direction (<code>ASC</code> | <code>DES</code>):</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '.' . $format . '?sort=&lt;propertyName&gt;&direction=DES</code></p>';
      // Pagination
      $page['body']['#markup'] .= '<h4>Pagination</h4>';
      $page['body']['#markup'] .= '<p>You can specify an offset to exclude the first N results:</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '.' . $format . '?offset=&lt;N&gt;</code></p>';
      $page['body']['#markup'] .= '<p>You can also specify a limit to the number of results returned by the call:</p>';
      $page['body']['#markup'] .= '<p><code>/' . $resource['menu_path'] . '.' . $format . '?limit=&lt;N&gt;</code></p>';
      $page['body']['#markup'] .= '<p>There is a hard limit of ' . variable_get('restws_query_max_limit', 100) . ' items per API call, which cannot be exceeded.</p>';

      $page['body']['#markup'] .= '</dd>';

      // Permissions
      $page['body']['#markup'] .= '<dt>';
      $page['body']['#markup'] .= '<h3>Permissions</h3>';
      $page['body']['#markup'] .= '</dt>';
      $page['body']['#markup'] .= '<dd>';
      $page['body']['#markup'] .= '<p>The following roles have permission to access the ' . $type . ' resource:</p>';
      $page['body']['#markup'] .= '<ul>';
      $roles = user_roles(FALSE, 'access resource ' . $type);
      foreach($roles as $role) {
        $page['body']['#markup'] .= '<li>' . $role . '</li>';
      }
      $page['body']['#markup'] .= '</ul>';
      $page['body']['#markup'] .= '</dd>';

      $page['body']['#markup'] .= '</dl>';

    }

  }

  return $page;
}